@using Application.Interactors
@using Application.Models

@inject IArticlesInteractor _articlesInteractor


@page "/"


<div class="home-page">

    <AuthorizeView>
        <Authorized>
        </Authorized>
        <NotAuthorized>
            <div class="banner">
                <div class="container">
                    <h1 class="logo-font">
                        @_appName
                    </h1>
                    <p>A place to share your <i>Blazor Server</i> knowledge.</p>
                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>


    <div class="container page">
        <div class="row">
            <div class="col-md-9">
                <HomeFeedNavigation ActiveTab="@_activeTab" ActiveTagName="@_selectedTag" OnSelectedTab="SetTab" />
                <ArticleList ArticleListFilter="_articleListFilter" />
            </div>
            <div class="col-md-3">
                <div class="sidebar">
                    <p>Popular Tags</p>
                    @if (_tagsLoaded)
                    {
                        <div class="tag-list">
                            @foreach (string tag in _taglist)
                            {
                                <a class="tag-default tag-pill" @onclick="_ => SelectedTag(tag)"> @tag </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div>Loading tags...</div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>



@code {
    private string _appName = "Conduit";
    private bool _isLoggedIn = false;
    private string _activeTab = "all";
    private string[] _taglist;

    private string? _selectedTag;

    private bool _tagsLoaded = false;

    public ArticleListFilter _articleListFilter = new ArticleListFilter();


    protected override async Task OnInitializedAsync()
    {
        _taglist = await _articlesInteractor.GetTagListAsync();
        _tagsLoaded = true;
    }

    private void SelectedTag(string tag)
    {
        _selectedTag = tag;
        _activeTab = "";
        _articleListFilter.Offset = 0;
        _articleListFilter.Tag = tag;
    }

    private void SetTab(string tab)
    {
        _activeTab = tab;
        _selectedTag = null;
        _articleListFilter = new ArticleListFilter();
    }

}
