@inject Blazored.LocalStorage.ILocalStorageService _localStorage

@if (hasLoaded)
{
<CascadingValue Value="@this">
    @ChildContent
</CascadingValue>
}
else
{
<p>Loading...</p>
}

@code {
    private bool hasLoaded;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private string? Token { get; set; }

    protected override async Task OnInitializedAsync()
    {

        Token = await _localStorage.GetItemAsync<string>
    ("token");
    hasLoaded = true;
    }

    public async Task SaveTokenAsync(string token)
    {
    await _localStorage.SetItemAsync("token", token);
    }

    public async Task<string>
        GetTokenAsync()
        {
        return await _localStorage.GetItemAsync<string>
            ("token") ?? "";
            }

            }
