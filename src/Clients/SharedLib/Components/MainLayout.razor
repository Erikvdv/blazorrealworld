@using SharedLib.Extensions
@using Application.Services
@using Application.Models;

@inherits LayoutComponentBase
@inject CustomAuthenticationStateProvider _authenticationStateProvider
@inject IConduitApiService _apiService

@if (_isInitialised)
{
    <Header Title="Conduit"></Header>


    @Body

    <Footer />
}
else
{
    <div>Loading...</div>
}


@code{
    [CascadingParameter]
    private BrowserStateProvider? _browserStateProvider { get; set; }

    private bool _isInitialised = false;

    private User _user;

    protected override async Task OnInitializedAsync()
    {
        var token = await _browserStateProvider!.GetTokenAsync();
        if (string.IsNullOrEmpty(token))
        {
            _isInitialised = true;
            return;
        }

        _user = await _apiService!.LoginWithTokenAsync(token);
        _authenticationStateProvider!.SignInUser(_user);
        _isInitialised = true;

    }

}